<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mod.loan.mapper.ReportRecycleRepayStatMapper">
	<resultMap id="BaseResultMap" type="com.mod.loan.model.ReportRecycleRepayStat">
		<!-- WARNING - @mbg.generated -->

		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="merchant" jdbcType="VARCHAR" property="merchant" />
		<result column="recycled_id" jdbcType="INTEGER" property="recycledId" />
		<result column="recycled_name" jdbcType="VARCHAR" property="recycledName" />
        <result column="recycle_cnt" jdbcType="INTEGER" property="recycleCnt" />
        <result column="not_return_cnt" jdbcType="INTEGER" property="notReturnCnt" />
        <result column="overdue_day" jdbcType="INTEGER" property="overdueDay" />
        <result column="repay_1_rate" jdbcType="DOUBLE" property="repay_1_rate" />
        <result column="repay_3_rate" jdbcType="DOUBLE" property="repay_3_rate" />
        <result column="repay_7_rate" jdbcType="DOUBLE" property="repay_7_rate" />
        <result column="repay_60_rate" jdbcType="DOUBLE" property="repay_60_rate" />
        <result column="recycle_date" jdbcType="VARCHAR" property="recycleDate" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
	</resultMap>

    <select id="findAllEnable" resultType="com.mod.loan.model.ReportRecycleRepayStat">
      SELECT
        m.user_name AS recycledName,
        m.merchant as merchant,
        u.follow_user_id as recycledId
      FROM tb_recycle_user u
      LEFT JOIN tb_merchant_manager m ON u.follow_user_id = m.id
      WHERE u.status=0
    </select>

    <select id="findRecycleRepayStatList" resultType="map">
        SELECT
        mm.user_name as 'recycled_name',
        sum(case when follow_user_id&lt;&gt;0 then 1 else 0 end) 'recycle_cnt',
        sum(case when real_repay_time is null then 1 else 0 end)'not_return_cnt',
        sum(case when real_repay_time is null then 1 else 0 end)/count(0) 'current_rate',
        sum(case when overdue_day&gt;0 and overdue_day&lt;2 and follow_user_id&lt;&gt;0 and real_repay_time is not null then 1 else 0 end)/sum(case when overdue_day&gt;0 then 1 else 0 end) 'repay_1_rate',
        sum(case when overdue_day&gt;1 and overdue_day&lt;4 and follow_user_id&lt;&gt;0 and real_repay_time is not null then 1 else 0 end)/sum(case when overdue_day&gt;0 then 1 else 0 end) 'repay_3_rate',
        sum(case when overdue_day&gt;3 and overdue_day&lt;8 and follow_user_id&lt;&gt;0 and real_repay_time is not null then 1 else 0 end)/sum(case when overdue_day&gt;0 then 1 else 0 end) 'repay_7_rate',
        sum(case when overdue_day&gt;7 and overdue_day&lt;61 and follow_user_id&lt;&gt;0 and real_repay_time is not null then 1 else 0 end)/sum(case when overdue_day&gt;0 then 1 else 0 end) 'repay_60_rate',
        sum(case when follow_user_id != 0 and real_repay_time is not null then 1 else 0 end)/sum(case when overdue_day&gt;0 then 1 else 0 end) 'sum_repay_rate'
        from
        tb_order cr
        left join tb_merchant_manager mm on cr.follow_user_id = mm.id
        <where>
            <if test="userType != null">
                and cr.user_type = #{userType}
            </if>
            <if test="merchant != null">
                and cr.merchant = #{merchant}
            </if>
            <if test="startTime != null">
                and cr.recycle_date &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                and cr.recycle_date &lt; DATE_ADD(#{endTime},INTERVAL 1 DAY)
            </if>
            and cr.follow_user_id != 0
        </where>
        GROUP BY 1
    </select>

    <update id="decreaseNotReturnCnt">
        update report_recycle_repay_stat
        set not_return_cnt = not_return_cnt - 1,
            update_time = NOW()
        where recycle_date = #{recycleDate}
        and recycled_id = #{recycledId}
    </update>


</mapper>